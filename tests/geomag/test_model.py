import math
from datetime import date, timedelta

import pytest
from api import declination

known_vals = [
    (2020, 0, 0, 80, 0, 6570.4, -146.3, 54606.0, 6572.0, 55000.1, 83.14, -1.28),
    (2020, 0, 0, 0, 120, 39624.3, 109.9, -10932.5, 39624.4, 41104.9, -15.42, 0.16),
    (2020, 0, 0, -80, 240, 5940.6, 15772.1, -52480.8, 16853.8, 55120.6, -72.20, 69.36),
    (2020, 0, 100, 80, 0, 6261.8, -185.5, 52429.1, 6264.5, 52802.0, 83.19, -1.70),
    (2020, 0, 100, 0, 120, 37636.7, 104.9, -10474.8, 37636.9, 39067.3, -15.55, 0.16),
    (
        2020,
        0,
        100,
        -80,
        240,
        5744.9,
        14799.5,
        -49969.4,
        15875.4,
        52430.6,
        -72.37,
        68.78,
    ),
    (2022, 0.5, 0, 80, 0, 6529.9, 1.1, 54713.4, 6529.9, 55101.7, 83.19, 0.01),
    (2022, 0.5, 0, 0, 120, 39684.7, -42.2, -10809.5, 39684.7, 41130.5, -15.24, -0.06),
    (
        2022,
        0.5,
        0,
        -80,
        240,
        6016.5,
        15776.7,
        -52251.6,
        16885.0,
        54912.1,
        -72.09,
        69.13,
    ),
    (2022, 0.5, 100, 80, 0, 6224.0, -44.5, 52527.0, 6224.2, 52894.5, 83.24, -0.41),
    (2022, 0.5, 100, 0, 120, 37694.0, -35.3, -10362.0, 37694.1, 39092.4, -15.37, -0.05),
    (
        2022,
        0.5,
        100,
        -80,
        240,
        5815.0,
        14803.0,
        -49755.3,
        15904.1,
        52235.4,
        -72.27,
        68.55,
    ),
]

vals = [
    (
        lat,
        lng,
        height,
        date(yr, 1, 1) + timedelta(days=math.floor(fraction_year * 365)),
        d,
    )
    for (yr, fraction_year, height, lat, lng, x, y, z, h, f, i, d) in known_vals
]


@pytest.mark.parametrize("dlat, dlng, alt, date, dec", vals)
def test_timedistance_v0(dlat, dlng, alt, date, dec):
    assert round(declination(dlat, dlng, alt, date), 2) == dec
